{"version":3,"sources":["components/YouTube/YouTubeEmbed.js","components/Pagination/index.js","App.js","reportWebVitals.js","index.js"],"names":["YoutubeEmbed","links","loading","map","link","className","title","src","url","frameborder","allow","allowfullscreen","Pagination","linksPerPage","totalLinks","paginate","pageNumbers","i","Math","ceil","push","style","left","position","fontSize","number","onClick","App","useState","setLinks","setLoading","currentPage","setCurrentPage","useEffect","a","axios","get","res","data","fetchLinks","indexOfLastLink","indexOfFirstLink","currentLinks","slice","class","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA+BeA,EA3BM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MACtB,OAD2C,EAAdC,QAEpB,4CAIP,mCACGD,EAAME,KAAI,SAAAC,GAAI,OACb,sBAAKC,UAAU,mBAAf,UACA,+BAAOD,EAAKE,QACZ,wBACEC,IAAG,wCAAmCH,EAAKI,KAC3CC,YAAY,IACZC,MAAM,4BACNC,iBAAe,EACfL,MAAM,mBCMDM,G,MAtBI,SAAC,GAGlB,IAH8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAGnB,OACE,qBAAKI,MAAO,CAACC,KAAM,MAAOC,SAAU,WAAYC,SAAS,QAAzD,SACE,oBAAInB,UAAU,aAAd,SACGW,EAAYb,KAAI,SAAAsB,GAAM,OACrB,oBAAiBpB,UAAU,YAA3B,SACE,mBAAGqB,QAAS,kBAAMX,EAASU,IAASpB,UAAU,YAA9C,SACGoB,KAFIA,Y,iBC+BJE,MAxCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAuBJ,mBAAS,IAAzBf,EAAP,oBAEAoB,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,6DACjBJ,GAAW,GADM,SAECK,IAAMC,IAAI,8CAFX,OAEXC,EAFW,OAGjBR,EAASQ,EAAIC,MACbR,GAAW,GAJM,2CAAH,qDAOhBS,KACC,IAGH,IAAMC,EAAkBT,EAAclB,EAChC4B,EAAmBD,EAAkB3B,EACrC6B,EAAezC,EAAM0C,MAAMF,EAAkBD,GAKnD,OACE,qCACE,qBAAKI,MAAM,cAAX,SACE,iCAAQ,qDAEV,cAAC,EAAD,CAAc3C,MAAOyC,EAAcxC,QAASA,IAC5C,cAAC,EAAD,CACEW,aAAcA,EACdC,WAAYb,EAAM4C,OAClB9B,SAXW,SAAC+B,GAAD,OAAgBd,EAAec,UChBnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29aff28b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\n\nconst YoutubeEmbed = ({ links, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <>\n      {links.map(link => (\n        <div className=\"video-responsive\">\n        <span>{link.title}</span>\n        <iframe\n          src={`https://www.youtube.com/embed/${link.url}`}\n          frameborder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          allowfullscreen\n          title=\"video\"\n        />\n        </div>\n      ))}\n    </>\n  );\n};\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired,\n};\n\nexport default YoutubeEmbed;\n","import React from 'react';\nimport \"./style.css\";\n\nconst Pagination = ({ linksPerPage, totalLinks, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalLinks / linksPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav style={{left: '40%', position: \"relative\", fontSize:\"24px\"}}>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import { React, useEffect, useState } from \"react\";\nimport YoutubeEmbed from \"./components/YouTube/YouTubeEmbed\";\nimport Pagination from \"./components/Pagination\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [links, setLinks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [linksPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchLinks = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://khhreddit.herokuapp.com/get_tracks\");\n      setLinks(res.data);\n      setLoading(false);\n    };\n\n    fetchLinks();\n  }, []);\n\n  // Get current posts\n  const indexOfLastLink = currentPage * linksPerPage;\n  const indexOfFirstLink = indexOfLastLink - linksPerPage;\n  const currentLinks = links.slice(indexOfFirstLink, indexOfLastLink);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <>\n      <div class=\"page-header\">\n        <center><h1>Daily K Hip Hop</h1></center>\n      </div>\n      <YoutubeEmbed links={currentLinks} loading={loading} />\n      <Pagination\n        linksPerPage={linksPerPage}\n        totalLinks={links.length}\n        paginate={paginate}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}